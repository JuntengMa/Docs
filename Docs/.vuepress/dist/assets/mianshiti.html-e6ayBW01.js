import{_ as e,o,c as t,e as a}from"./app-1sZ14lpL.js";const r={},s=a('<p>1、js数据类型 基本（栈），引用（堆） 类型标识： Number 1、浮点 010、String 100、Boolean 110、Object 000、null 所有机器码均为0、undefined −2^30 整数来表示</p><p>2、深浅拷贝区别和实现方式</p><p>3、判断数组的方法 typeof 和 instanceOf 的区别； Array.isArray(arr)，Object.prototype.toString.call(arr)</p><p>4、vue父子组件怎么相互传值、调用彼此的方法</p><p>5、websocket常用方法、避免断开连接和多次连接的方法</p><p>6、cookie,sessionStorage,localStorage localStorage是永久存储在本地，生命周期是永久的，除非你主动去删除; sessionStorage是存储到当前页面关闭为止，生命周期是在仅在当前会话下有效; cookie则根据你设置的有效时间来存储，限制大小为4kb;(设置cookie：document.cookie=&quot;username=John Doe; expires=Thu, 18 Dec 2043 12:00:00 GMT&quot;😉 localStorage和sessionStorage的存储数据大小一般都是：5MB; 拓展： Cookie 的本职工作并非本地存储，而是“维持状态”（背景：HTTP 协议是一个无状态协议，请求的时候，如何让服务器知道“我是我”呢）</p><p>7、数组降维，es6数组方法</p><p>8、vue数据更新、视图没关系的解决方案</p><p>9、react高阶组件</p><p>10、reack hook</p><p>11、vue双向绑定，v-cloak</p><p>12、promise</p><p>13、闭包的好处和坏处，防抖节流及应用场景 防抖：事件一触发就开始计时，计时范围内就算事件再次触发也不会响应，计时停止才触发响应函数（scroll） 防抖：事件一触发就开始计时，计时范围内 如果事件再次触发就会重新计时，计时停止才触发响应函数（input change）</p><p>14、单页面应用的缺点 单页面跳转仅刷新局部资源，公共资源仅刷新一次，之后的操作交互，数据交互是通过路由、ajax来进行的，页面本身没有进行刷新。 优点： ①前后端分离 ②良好的交互体验——用户不用刷新页面，页面显示流畅 ③减轻服务器压力——服务器只出数据 缺点： ①seo难度高——数据渲染在前端进行 ②前进后退管理——单页面不能使用浏览器的前进后退 ③初次加载耗时长</p><p>15、项目打包工具、webpack打包优化 对于babel-loader可以，loader: &#39;babel-loader?cacheDirectory=true&#39;； node_modules：用 DllPlugin 打包 node_modules，这个插件会把第三方库单独打包到一个文件中，这个文件就是一个单纯的依赖库。这个依赖库不会跟着你的业务代码一起被重新打包，只有当依赖自身发生版本变化时才会重新打包。 js：UglifyJsPlugin 还可以用 Happypack——将 loader 由单进程转为多进程</p><p>16、var和let</p><p>17、对vue框架的看法，vuex的理解 vuex规定所有state里数据必须通过mutation方法来修改</p><p>18、vue刷新页面会导致，vuex中的state丢失 因为store里的数据是保存在运行内存中的,当页面刷新时，页面会重新加载vue实例，store里面的数据就会被重新赋值； 解决思路：在点击页面刷新时先将state数据保存到sessionStorage,然后才真正刷新页面 //在页面刷新时将vuex里的信息保存到sessionStorage里 window.addEventListener(&quot;beforeunload&quot;,()=&gt;{ sessionStorage.setItem(&quot;store&quot;,JSON.stringify(this.$store.state)) })</p><p>19、图片的处理 1、JPEG/JPG 关键字：有损压缩、体积小、加载快、不支持透明 JPG 适用于复杂的、色彩层次丰富的图片，在我们日常开发中，JPG 图片经常作为大的背景图、轮播图或 Banner 图出现。 2、PNG-8 与 PNG-24 关键字：无损压缩、质量高、体积大、支持透明 PNG 适用于颜色简单且对比强烈的图片，如logo 3、SVG 关键字：文本文件、体积小、不失真、兼容性好、图片可无限放大而不失真</p><h1 id="腾讯" tabindex="-1"><a class="header-anchor" href="#腾讯" aria-hidden="true">#</a> 腾讯</h1><p>（开局人就懵啦） 2、如果项目中需要跳转到别的项目组给的链接中，怎么判断跳转到的页面是开发环境、测试环境还是生产环境； 3、Vue的路由懒加载，怎么实现的，知道原理嘛，它有什么用； 4、react的路由懒加载，怎么实现的； 5、Vue的生命周期； 6、Vue组件间有哪种通信方式； 7、Vuex的五个核心属性； 8、Vuex中的数据流向； 9、用过redux嘛，说一下三大概念，redux中的数据流向呢； 10、Vuex中怎么做异步操作； 11、Vue中怎么做验证用户是否已登录再进行页面跳转操作（导航守卫），react中没有导航首位这些钩子函数，怎么处理； 12、v-model怎么用，给个input输入框怎么实现v-model功能； 13、Vue中有没有遇到过改变数组内数据，视图没变化；怎么改变数组中某一个数据同时更新视图； 14、react中怎么改变数组中某一个数据同时更新视图； 15、ES6有用过嘛，有过什么， 16、普通函数和箭头函数的区别； 17、说一下函数中this指向的问题有哪些情况； 18、有用过axios嘛，做过什么处理； 19、防抖和节流； 20、Vue中怎么防止样式污染(scoped)； 21、react中怎么防止样式污染(css样式模块化)，说一下原理； 22、react中用过哪些高级组件； 23、Vue中怎么实现路由跳转的（多种方法）; 24、react中怎么实现路由跳转的（多种方法）;</p><h1 id="某自研公司" tabindex="-1"><a class="header-anchor" href="#某自研公司" aria-hidden="true">#</a> 某自研公司</h1><p>传入token，用什么加密 ssr 用vue比js原生开发的优势 浏览器渲染方式 微信小程序开发流程（从创建到上线） uni-app使用流程 金融借款类app安全问题很严格，做过哪些安全优化。 如果要实现一个星空效果，要怎么用js实现 如果前后端传一张小图片，怎么加密</p>',23),p=[s];function i(n,c){return o(),t("div",null,p)}const l=e(r,[["render",i],["__file","mianshiti.html.vue"]]);export{l as default};
