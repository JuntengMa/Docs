import{_ as n,o as l,c as i,e as a}from"./app-iph3vjA0.js";const s={},p=a(`<h4 id="深信服" tabindex="-1"><a class="header-anchor" href="#深信服" aria-hidden="true">#</a> 深信服</h4><ul><li><p>讲项目（讲了小半小时）</p></li><li><p>对ts有没有了解</p></li><li><p>vue路由懒加载</p></li><li><p>常见的异步函数</p></li><li><p>nextTick使用场景 &amp; 原理</p></li><li><p>代码执行题 （异步函数执行题目）</p></li><li><p>算法，去除相邻项 （力扣316）</p></li></ul><h4 id="富途" tabindex="-1"><a class="header-anchor" href="#富途" aria-hidden="true">#</a> 富途</h4><p>1、页面输入URL到最后渲染都发生了什么</p><ul><li><p>DNS解析</p><ul><li>DNS解析什么作用</li><li>DNS解析怎么解析的（怎么找到服务器IP的）</li><li>一台服务器可以绑定几个域名</li></ul></li><li><p>Http了解多少</p><ul><li><p>http是什么</p></li><li><p>http版本</p></li><li><p>http方法</p></li><li><p>http keep-alive ==》问的有点深</p><ul><li>为什么用keep-alive</li><li>什么好处</li></ul></li><li><p>http1.1版本有啥缺点</p></li><li><p>https （http + 非对称加密 + SSL正书 ===》详细说一下）</p></li></ul></li><li><p>页面渲染过程中都发生了什么</p><ul><li><p>html解析</p></li><li><p>css解析</p></li><li><p>js解析</p></li><li><p>浏览器解析原理</p></li></ul></li></ul><p>2、this指向问题 + js执行顺序问题</p><p>https://blog.csdn.net/sinat_31231955/article/details/116425035</p><ul><li><p>作为函数调用时 this指向</p></li><li><p>作为对象属性调用</p></li><li><p>作为构造函数调用</p></li><li><p>call、apply、bind修改this指向</p></li><li><p>promise.then 、 settimeout 、console.log(xxx) 执行顺序</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timeout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Promise2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;global&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这道题考的是js执行栈和事件循环</li><li>具体到同步任务都在执行栈执行</li><li>异步任务在任务队列执行 <ul><li>任务队列分为 微任务 宏任务</li><li>微任务宏任务都有哪些</li><li>微任务宏任务执行顺序</li></ul></li></ul></li></ul><p>3、同源策略 --&gt; 协议域名端口号</p><p>4、怎么处理跨域问题</p><blockquote><ul><li>后端服务器配置白名单</li><li>nginx</li><li>cors</li></ul></blockquote><p>5、nginx了解多少</p><ul><li>nginx用来做什么的</li><li>nginx怎么获取分配流量的</li><li>nginx怎么配置，具体都做了什么</li></ul><p>6、前端安全有没有了解</p><ul><li>xss工具</li><li>csrf攻击</li><li>各自都怎么防御的</li></ul><p>7、算法题 ， 判断两个数组是不是子集关系</p><p>条件：</p><p>​ 1、两数组都是递增的</p><p>​ 2、可重复 [1,2,2,3,4,4,5] , [1,1,1]</p><p>例：</p><p>​ 输入 [1,2,3] 和 [ 1,2] 返回 true</p><ul><li><p>暴力破解 做出来了</p></li><li><p>算时间空间复杂度</p></li><li><p>有没有优化写法</p></li></ul><p>8、优化</p><ul><li><p>element懒加载</p></li><li><p>同样的文件大小之和是一样的，分成3个文件和分成10个文件哪个比较快？</p></li><li><p>splickThunks原理</p></li><li><p>externals原理</p></li><li><p>cdn原理 ，除了内容分发网络就近分配之外还有什么特点</p></li></ul><h4 id="深圳民安泰智能" tabindex="-1"><a class="header-anchor" href="#深圳民安泰智能" aria-hidden="true">#</a> 深圳民安泰智能</h4><ol><li>项目介绍</li><li>React父子传值，跨组件传值方式</li><li>防抖节流（说思路）</li><li>setState原理</li><li>react-router了解多少，原理？</li><li>国际化了解不（UI库自带的国际化 ， i18n等）</li><li>antd了解多少</li><li>项目配置（开发后端测试都多少人）</li><li>事件循环原理（细说）</li></ol><h4 id="机智云" tabindex="-1"><a class="header-anchor" href="#机智云" aria-hidden="true">#</a> 机智云</h4><ol><li>画三角形原理</li><li>settimeout第三个参数，可以作为延时函数初始参数</li><li>flex布局</li><li>函数提升（变量提升）</li><li>防抖节流</li><li>sessionStorage数据两个页面可以共享吗</li><li>跨域的了解</li><li>为什么要限制跨域</li></ol><h4 id="金地楼宇" tabindex="-1"><a class="header-anchor" href="#金地楼宇" aria-hidden="true">#</a> 金地楼宇</h4><ol><li>React hook的了解</li><li>直播视频流格式了解多少</li><li>React fidder架构了解多少</li><li>为什么React需要修改架构而Vue不需要</li><li>为什么Vue中循环需要设置key，但是静态节点就不需要</li><li>Vue响应式原理</li><li>Vue每个数据的Observe可以对应多个watcher吗</li><li>proxy 和 Object.defineProperty 的劫持时间点一样吗</li><li>React Hook解决了什么问题，为什么要用hook</li><li>Vue服务端渲染</li><li>块级作用域</li></ol><h4 id="区块链公司" tabindex="-1"><a class="header-anchor" href="#区块链公司" aria-hidden="true">#</a> 区块链公司</h4><ol><li><p>Vuex 中的action为什么不直接修改state ， 而是用mutation修改</p><blockquote><p>https://juejin.cn/post/7044876418341470245</p><p>https://juejin.cn/post/6844904054108192776</p><p>小结：</p><ul><li>state中数据为同步更新的 ， mutation 也只支持同步方式修改数据</li><li>actions允许异步更新，当你异步对state进行操作时，还没执行完，这时候如果state已经在其他地方被修改了，这样就会导致程序存在问题了。</li><li>所以state要同步操作，通过mutations的方式限制了不允许异步</li></ul></blockquote></li><li><p>发布订阅模式和观察者模式区别</p></li><li><p>Vue diff算法广度优先还是深度优先</p></li><li><p>react hook</p><ol><li>useState</li><li>useEffect 和 useCallBack区别</li><li>useMemo使用方法</li></ol></li><li><p>react 和 vue 区别 ， 性能上的区别？</p></li><li><p>http请求，post 、put 、patch区别</p></li><li><p>常见状态码 （401、402、403 、 404）</p></li><li></li></ol><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h4>`,33),t=[p];function e(o,c){return l(),i("div",null,t)}const r=n(s,[["render",e],["__file","mianjing.html.vue"]]);export{r as default};
