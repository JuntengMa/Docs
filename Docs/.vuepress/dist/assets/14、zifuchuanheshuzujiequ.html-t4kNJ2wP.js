import{_ as t,o as e,c as s,a as i,e as r}from"./app-1sZ14lpL.js";const a={},l=r('<h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h3><p>这三个方法都可以对字符串进行截取，并且返回一个新的字符串，也就是不会对原字符串进行修改</p><ul><li><p><strong>slice(startIndex , endIndex)</strong></p><blockquote><ul><li>==不改变原字符串==，返回新的</li><li>==[ start , end )==，索引左闭右开</li><li>支持负值，将负值和字符串长度相加截取相应长度</li></ul></blockquote></li><li><p><strong>substring(startIndex , endIndex)</strong></p><blockquote><p>substring() 方法用于提取字符串中介于两个指定下标之间的字符。</p><ul><li>==[ start , end )==，索引左闭右开</li><li><strong>不</strong>支持负值</li></ul></blockquote></li><li><p><strong>substr(startIndex , length)</strong></p><blockquote><p>substr() 方法可在字符串中抽取从 <em>开始</em> 下标开始的指定数目的字符。</p><p><strong>提示：</strong> substr() 的参数指定的是子串的开始位置和长度，因此它可以替代 substring() 和 slice() 来使用。 在 IE 4 中，参数 start 的值无效。在这个 BUG 中，start 规定的是第 0 个字符的位置。在之后的版本中，此 BUG 已被修正。 ECMAscript 没有对该方法进行标准化，因此反对使用它。</p></blockquote></li></ul><p><img src="https://raw.githubusercontent.com/tengyuanOasis/image/master/image/202205232353620.png" alt="image-20220523235313511"></p><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><ul><li>splice</li></ul><blockquote><ul><li><p>可以<strong>添加</strong>元素、<strong>删除</strong>元素，也可以<strong>截取</strong>数组片段。</p></li><li><p>==会修改原数组==</p><p><code>array.splice( start, deleteCount , 要添加或删除的元素 )</code></p></li></ul></blockquote><p><img src="https://raw.githubusercontent.com/tengyuanOasis/image/master/image/202205232356292.png" alt="image-20220523235645237"></p><ul><li>slice</li></ul><blockquote><p>用于与字符串类似，不改变原数组</p></blockquote><p><img src="https://raw.githubusercontent.com/tengyuanOasis/image/master/image/202205232357047.png" alt="image-20220523235710992"></p>',11);function n(o,u){return e(),s("div",null,[i(" @format "),l])}const g=t(a,[["render",n],["__file","14、zifuchuanheshuzujiequ.html.vue"]]);export{g as default};
