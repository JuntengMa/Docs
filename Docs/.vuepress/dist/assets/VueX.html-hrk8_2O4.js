import{_ as t,o,c as e,e as i}from"./app-1sZ14lpL.js";const l={},c=i("<ol><li><p>vuex核心</p><blockquote><p>state、getters、mutations、actions、modules</p></blockquote></li><li><p>mucation 和 action 为什么要功能拆分</p><p>https://juejin.cn/post/6844904054108192776</p><blockquote><ul><li>mucation 只允许同步操作state</li><li>action 允许异步操作，且actions内部实现为： <ul><li>当某种类型的action只有一个声明时，action的回调会被当作普通函数执行</li><li>当如果有多个声明时，它们是被视为Promise实例，并且用Promise.all执行，总所周知，Promise.all在执行Promise时是不保证顺序的，也就是说，假如有3个Promise实例：P1、P2、P3，它们3个之中不一定哪个先有返回结果，那么我们仔细思考一下：如果同时在多个action中修改了同一个state，这时候可能就会造成问题</li></ul></li></ul></blockquote></li><li></li></ol>",1),s=[c];function a(n,u){return o(),e("div",null,s)}const _=t(l,[["render",a],["__file","VueX.html.vue"]]);export{_ as default};
