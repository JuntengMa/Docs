import{_ as o,r as p,o as i,c as l,a as c,b as n,d as s,f as e,e as t}from"./app-1sZ14lpL.js";const r={},u=n("h3",{id:"_1、for-in",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1、for-in","aria-hidden":"true"},"#"),s(" 1、for-in")],-1),d={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Enumerability_and_ownership_of_properties",target:"_blank",rel:"noopener noreferrer"},v=n("strong",null,"用于遍历对象",-1),m=t(`<li><p>for...in 循环对象，每个 item 代表 key</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;测试&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">hobby</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;swimming&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;running&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">weight</span><span class="token operator">:</span> <span class="token string">&#39;120&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;180cm&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;key: &#39;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
Output:
    key:  name
    key:  age
    key:  hobby
    key:  weight
    key:  height
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>for...in 循环数组，每个 item 代表 index</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;i: &#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
Output :
  i:  0
  i:  1
  i:  2
  i:  3
  i:  4
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),b=n("p",null,[n("strong",null,"循环对象会可能出现的问题？？？")],-1),h={href:"https://juejin.cn/post/6844903555401252871",target:"_blank",rel:"noopener noreferrer"},f=n("img",{src:"https://raw.githubusercontent.com/tengyuanOasis/image/master/202202211608715.png",alt:"image-20220221160824552",style:{zoom:"50%",float:"left"}},null,-1),g=t(`<h3 id="_2、for-of" tabindex="-1"><a class="header-anchor" href="#_2、for-of" aria-hidden="true">#</a> 2、for-of</h3><ul><li>用于遍历<strong>数组</strong></li><li>for-of 是 ==ES6==引入属性</li><li>for-of 不能用来遍例普通对象,需要和 Obect.keys()搭配使用</li><li>for...of 循环出的是 value</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;i: &#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
output: 
	i:  a
	i:  123
	i:  <span class="token punctuation">{</span> a: &#39;1&#39;, b: &#39;2&#39; <span class="token punctuation">}</span>
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结论:</p><ul><li>推荐在<strong>循环对象</strong>属性的时候，使用<strong>for...in</strong></li><li>在<strong>遍历数组</strong>的时候的时候使用<strong>for...of</strong>。</li><li>for...in 循环出的是 key，for...of 循环出的是 value</li><li>注意，for...of 是 ES6 新引入的特性。修复了 ES5 引入的 for...in 的不足</li><li>for...of 不能循环普通的对象，需要通过和 Object.keys()搭配使用</li></ul><h3 id="_3、map-foreach" tabindex="-1"><a class="header-anchor" href="#_3、map-foreach" aria-hidden="true">#</a> 3、Map &amp; forEach</h3><h6 id="相同点" tabindex="-1"><a class="header-anchor" href="#相同点" aria-hidden="true">#</a> 相同点：</h6><blockquote><p>1、map、forEach 都用来循环数组</p></blockquote><h6 id="不同点" tabindex="-1"><a class="header-anchor" href="#不同点" aria-hidden="true">#</a> 不同点：</h6><blockquote><p>1、map</p><ul><li>map 遍历数组并返回一个新的数字，不会改变原数组</li></ul><p>2、forEach</p><ul><li>forEach 遍历数组，会(可)修改原数组数据</li></ul></blockquote>`,10);function _(y,w){const a=p("ExternalLinkIcon");return i(),l("div",null,[c(" @format "),u,n("ol",null,[n("li",null,[n("p",null,[s("遍历一个对象的除"),n("a",d,[s("Symbol"),e(a)]),s("以外的"),n("a",k,[s("可枚举"),e(a)]),s("属性, =="),v,s("==")])]),m,n("li",null,[b,n("p",null,[s("可能会造成顺序错乱 , "),n("a",h,[s("原因"),e(a)])]),f])]),g])}const j=o(r,[["render",_],["__file","15、Jsxunhuan.html.vue"]]);export{j as default};
