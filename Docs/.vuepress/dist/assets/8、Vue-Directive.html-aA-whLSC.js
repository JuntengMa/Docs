import{_ as e,o,c as i,a as t,e as d}from"./app-1sZ14lpL.js";const c={},a=d('<h3 id="自定义指令" tabindex="-1"><a class="header-anchor" href="#自定义指令" aria-hidden="true">#</a> 自定义指令</h3><h5 id="_1、vue-directive" tabindex="-1"><a class="header-anchor" href="#_1、vue-directive" aria-hidden="true">#</a> 1、Vue.directive</h5><blockquote><p><code>Vue.directive</code>方法作用是<strong>注册或者获取全局指令</strong>，而不是让指令生效；</p><p>区别：</p><ul><li>注册指令需要做的事情是将指令保存在某个位置</li><li>让指令生效是指将指令从某位置拿出来执行它</li></ul></blockquote><h5 id="_2、-自定义-指令怎么生效的" tabindex="-1"><a class="header-anchor" href="#_2、-自定义-指令怎么生效的" aria-hidden="true">#</a> 2、（自定义）指令怎么生效的</h5><blockquote><p>模板编译阶段，将指令解析在 AST，然后使用 AST 生成代码字符串的过程，实现自定义指令的功能；</p><p>最后在虚拟 DOM 渲染过程中触发自定义指令中的钩子函数，使其生效</p></blockquote><img src="https://raw.githubusercontent.com/tengyuanOasis/image/master/202202211830322.png" alt="image-20220221183003249" style="zoom:80%;float:left;"><blockquote><p>如图：</p><ol><li>在模板解析阶段，会将节点上的指令解析出来并添加到 <code>AST</code> 的 <code>directives</code>属性中 ；</li><li>随后 <code>directives</code> 数据会传递到 Vnode 中，接着可以通过 <code>Vnode.data.directives</code>获取节点绑定的指令；</li><li>最后当虚拟 DOM 修改时，会根据节点对比触发一些钩子函数；</li><li>在 diff 算法结束后，根据对比结果触发指令的钩子函数==》指令生效</li></ol></blockquote><h5 id="_3、钩子-注意顺序-下面即调用顺序" tabindex="-1"><a class="header-anchor" href="#_3、钩子-注意顺序-下面即调用顺序" aria-hidden="true">#</a> 3、钩子(注意顺序，下面即调用顺序)</h5><ol><li><p><code>bind</code>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</p></li><li><p><code>inserted</code>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</p></li><li><p><code>update</code>：所在组件的 VNode 更新时调用，<strong>但是可能发生在其子 VNode 更新之前</strong>。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。</p></li><li><p><code>componentUpdated</code>：指令所在组件的 VNode <strong>及其子 VNode</strong> 全部更新后调用。</p></li><li><p><code>unbind</code>：只调用一次，指令与元素解绑时调用。</p></li></ol><p>https://cn.vuejs.org/v2/guide/custom-directive.html</p><h5 id="_4、钩子的区别" tabindex="-1"><a class="header-anchor" href="#_4、钩子的区别" aria-hidden="true">#</a> 4、钩子的区别:</h5><p>https://segmentfault.com/a/1190000019651831</p>',12);function r(l,n){return o(),i("div",null,[t(" @format "),a])}const h=e(c,[["render",r],["__file","8、Vue-Directive.html.vue"]]);export{h as default};
