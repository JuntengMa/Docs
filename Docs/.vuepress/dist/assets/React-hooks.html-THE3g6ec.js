import{_ as a,o as s,c as t,a as e,b as n,e as o}from"./app-iph3vjA0.js";const c={},p=n("blockquote",null,[n("p",null,"一直都知道Hook这个新技术,但是工作过程中几乎没有用到,最近刚好有时间来学习一下~~~~")],-1),l=o(`<h3 id="_01-什么是hook" tabindex="-1"><a class="header-anchor" href="#_01-什么是hook" aria-hidden="true">#</a> 01/什么是Hook?</h3><p>Hook是react16.8新增特性,可以在不编写class的情况下使用state以及其他React特性</p><h3 id="_02-什么是hook" tabindex="-1"><a class="header-anchor" href="#_02-什么是hook" aria-hidden="true">#</a> 02/什么是Hook?</h3><ul><li>Hook顾名思义是钩子的意思,它可以使函数组件中可以勾入React-State以及生命周期特性等等.</li><li>Hook不能在class组件中使用</li></ul><h3 id="_03-hook内置组件" tabindex="-1"><a class="header-anchor" href="#_03-hook内置组件" aria-hidden="true">#</a> 03/Hook内置组件</h3><ul><li><p><strong>useState</strong> (用于操控state)</p><ul><li><p><strong>使用:</strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>stateName <span class="token punctuation">,</span> stateChangeFun<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>初始值<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>count <span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>useEffect</strong></p></li></ul><p>Effect Hook 可以让我们在react中执行副作用操作</p><p><code>useEffect</code> 的第二个参数，有三种情况</p><ol><li>什么都不传，组件每次 <code>render</code> 之后 <code>useEffect</code> 都会调用，相当于 <code>componentDidMount</code> 和 <code>componentDidUpdate</code></li><li>传入一个空数组 [], 只会调用一次，相当于 <code>componentDidMount</code> 和 <code>componentWillUnmount</code></li><li>传入一个数组，其中包括变量，只有这些变量变动时，<code>useEffect</code> 才会执行</li></ol>`,9);function i(u,d){return s(),t("div",null,[p,e("more"),l])}const k=a(c,[["render",i],["__file","React-hooks.html.vue"]]);export{k as default};
