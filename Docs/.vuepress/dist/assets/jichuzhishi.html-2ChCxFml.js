import{_ as i,o as l,c as e,e as o}from"./app-1sZ14lpL.js";const t={},c=o('<h3 id="说说css选择器以及这些选择器的优先级" tabindex="-1"><a class="header-anchor" href="#说说css选择器以及这些选择器的优先级" aria-hidden="true">#</a> 说说CSS选择器以及这些选择器的优先级</h3><ol><li>css选择器 <ul><li>标签选择器 （<code> p 、 div 、 h1</code> 等）</li><li>id选择器 （ <code>#id </code>）</li><li>类选择器 （<code> .className</code>）</li><li>伪类选择器 (<code>a:hover, li:nth-child</code>)</li></ul></li><li>优先级 <ol><li><code>! imporatnt</code></li><li>内联样式（1000）</li><li>ID选择器（0100）</li><li>类选择器/属性选择器/伪类选择器（0010）</li><li>元素选择器/伪元素选择器（0001）</li><li>关系选择器/通配符选择器（0000）</li></ol></li></ol><h3 id="对bfc的理解" tabindex="-1"><a class="header-anchor" href="#对bfc的理解" aria-hidden="true">#</a> 对BFC的理解</h3><ol><li><p>什么是BFC</p><blockquote><p>块级格式化上下文 ， 简单来说BFC可以生成一个空间， 使得空间内部元素样式不受外部元素影响</p></blockquote></li><li><p>怎么触发BFC</p><ul><li>float ：right / left</li><li>overflow : scrooll / auto / hidded ( 不问visible )</li><li>position : absolute / fixed (绝对定位)</li><li>display ：flex / inline-block (行内块元素即可)</li></ul></li><li><p>BFC用来做什么</p><ol><li>使用Float脱离文档流，高度塌陷</li><li>阻止元素被浮动元素覆盖</li><li>实现两列自适应布局</li></ol></li></ol><h3 id="对盒模型的理解" tabindex="-1"><a class="header-anchor" href="#对盒模型的理解" aria-hidden="true">#</a> 对盒模型的理解</h3><ol><li><p>盒模型的分类</p><ul><li>怪异（IE）盒模型</li><li>W3C标准盒模型</li></ul></li><li><p>盒模型包括哪些</p><blockquote><p>元素的 content width 、 content height 、 padding 、margin 、border</p></blockquote></li><li><p>两种盒模型区别</p><ul><li><p>怪异（IE）盒模型 （<code>box-sizing : border-box</code>）</p><p>content width + content height + padding +border</p></li><li><p>标准盒模型（<code>box-sizing : conte-box</code>）</p><p>content width + content height</p></li></ul></li><li><p>为什么区分两种盒模型</p><blockquote><p>兼容问题，IE5.5 之前使用IE盒模型 ， IE6之后用的W3C标准盒模型</p></blockquote></li></ol><h3 id="css中可以被继承的属性" tabindex="-1"><a class="header-anchor" href="#css中可以被继承的属性" aria-hidden="true">#</a> Css中可以被继承的属性</h3><p>​ https://www.html.cn/qa/css3/13444.html</p><ol><li><p>字体属性</p><ul><li>font</li></ul></li><li><p>文本系列属性</p><ul><li>text-indent:文本缩进</li><li>text-align：文本水平对齐</li><li>line-height：行高</li><li>color: 文本颜色</li></ul></li><li><p>元素可见行（visibility）</p></li><li><p>光标属性（cursor）</p></li></ol>',9),d=[c];function a(h,n){return l(),e("div",null,d)}const p=i(t,[["render",a],["__file","jichuzhishi.html.vue"]]);export{p as default};
